language: python

sudo: false

python:
  - 2.7

os:
  - linux

cache:
  pip: true
  directories:
    - /home/travis/miniconda

addons:
  apt:
    packages:
      - libimage-exiftool-perl
      - libav-tools
      - ffmpeg
      - libmagickwand-dev
      - libzbar-dev
      - valgrind

before_install:
  - export PATH="$HOME/miniconda/bin:$PATH"
  # Download and install conda if necessary
  - if ! ( conda -V && which conda ); then
      if [[ "$TRAVIS_PYTHON_VERSION" == "2."* ]]; then
        wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
      else
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi ;
      bash miniconda.sh -f -b -p $HOME/miniconda;
    fi
  # Setup conda
  - hash -r
  - conda config --set always_yes true --set changeps1 false
  - conda update -q conda
  - conda info -a
  # Create and activate the virtualenv
  - if [ ! -e $HOME/miniconda/envs/py$TRAVIS_PYTHON_VERSION ]; then
      conda create -q -n py$TRAVIS_PYTHON_VERSION python=$TRAVIS_PYTHON_VERSION pip;
    fi
  - source activate py$TRAVIS_PYTHON_VERSION
  - if [[ "$(python --version 2>&1)" != *"$TRAVIS_PYTHON_VERSION"* ]]; then exit 1; fi

install:
  - conda install boost scipy ;
  - conda install -c menpo opencv ;
  - pip install -U pip;
  # Install dlib from git (with pip) as there was an issue with libjpeg
  # Which was solved and not yet released.
  - pip install git+https://github.com/davisking/dlib.git@02f6da285149a61bc58728d9c5e77932151118b5#egg=dlib ;
  - pip install -r test-requirements.txt ;
  - pip install -v -e .
  - pip uninstall -y file-metadata
  - ls -l file_metadata/datafiles

script:
  - flake8 --verbose --show-source --statistics --benchmark --max-complexity 10 setup.py setupdeps.py file_metadata tests
  - radon mi setup.py setupdeps.py file_metadata tests
  # complexity (--mccabe) and time (--profile, --durations) analysis by pytest
  # are too simplistic and buggy currently
  - python -m pytest --cov --pastebin=failed ;
  # - pprofile $(which py.test) ;
  - python -m cProfile -s time $(which py.test) > profile.out && head profile.out -n 50 ;
  - valgrind --tool=massif --massif-out-file=massif.out --log-file=valgrind.log python -m pytest || cat valgrind.log && ms_print massif.out | head -n 50
  - python setup.py sdist bdist bdist_wheel

after_success:
  - |-
    if [[ "$TRAVIS_BRANCH" == "master" && "$TRAVIS_PULL_REQUEST" == "false" ]] ; then
      curl -s -X POST -H "Content-Type: application/json" -H "Accept: application/json" -H "Travis-API-Version: 3" -H "Authorization: token $TRAVIS_TOKEN" -d "{\"request\": {\"branch\":\"master\"}}" https://api.travis-ci.org/repo/pywikibot-catfiles%2Fdocker-file-metadata/requests ;
    fi

after_script:
  - bash <(curl -s https://codecov.io/bash)

notifications:
  email: false
